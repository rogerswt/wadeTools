% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dist_blob_boundary.R
\name{blob.boundary}
\alias{blob.boundary}
\title{Find Blobs in 2 Dimensions}
\usage{
blob.boundary(
  ff,
  parameters = c("FSC-A", "SSC-A"),
  rotate = 0,
  location,
  strongest = FALSE,
  bandwidth = c(0.02, 0.02),
  gridsize = c(201, 201),
  height = 0.1,
  convex = FALSE,
  height1 = height,
  height2 = 0.05,
  delta_h = 0.01,
  log.transform = FALSE
)
}
\arguments{
\item{ff}{The input flowFrame}

\item{parameters}{Exactly 2 parameters included in ff}

\item{rotate}{Rotation angle (in degrees) of the blob you're looking for}

\item{location}{The target location of the blob (ignored if strongest = TRUE)}

\item{strongest}{Logical, whether to look for the blob containing the highest density}

\item{bandwidth}{2D measure of bandwidth used to compute the Kernel Density Estimate}

\item{gridsize}{2D measure of gridsize used to compute the Kernel Density Estimate}

\item{height}{The height at which to compute contours (height range is 0 - 1, 1 being the most dense peak)}

\item{convex}{Logical, whether to find the largest convex polygon at the target location}

\item{height1}{Starting height for searching for convex blob (only used if convex = TRUE)}

\item{height2}{Ending height for searching for convex blob (only used if convex = TRUE)}

\item{delta_h}{Step size used for searching for convex blob (only used if convex = TRUE)}

\item{log.transform}{Logical, should we use the density or its logarithm}
}
\value{
A polygon, described as a 2-column matrix of coordinates.  You can use this polygon
to gate data using the \strong{flowCore} function \code{polygonGate(.gate = bb)}.
}
\description{
The idea is to compute the kernel density estimate of a 2D slice
of a flowFrame, compute contours at a specified height, and
then select that contour which is either (a) closest to a specified location,
or (b) is the 'strongest' peak in the flowFrame.  Optionally, you can specify
that the contour be convex, in which case the function will attempt to find
the largest convex contour at either location.
}
\details{
blob.boundary uses \code{\link[grDevices]{contourLines}} to generate contours in density data.
It can get confused in several circumstances.  Sometimes it's
hard to detect a weak blob in the presence of a very strong blob, particularly
if they're close to each other and there's significant density connecting them.  It's
pretty easy to see why: contour lines will easily span between the two, effectively
connecting them into one bigger blob.  It is sometimes possible to pre-gate the data
to eliminate dense regions known to be uninteresting, and which may interfere
with blob finding.

It is sometimes useful to compute contours on the \strong{logarithm} of density, rather
than on the original density representation.  If you set log.transform = TRUE, it's
usually the case that a higher height parameter will work better than the smaller
(default) value.  This is because taking the log compresses the dynamic range, so
effectively everything is sort of 'high'.
}
