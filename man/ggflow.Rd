% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vis_gg.R
\name{ggflow}
\alias{ggflow}
\title{Draw a FlowJo-style (sort of) Plot Using ggplot Semantics}
\usage{
ggflow(
  ff,
  params = c("FSC-A", "SSC-A"),
  colors = c("flowjo", "viridis", "plasma", "magma"),
  resolution = c("medium", "coarse", "fine"),
  trans_sc = c("linear", "biexp", "asinh", "log"),
  trans_fl = c("biexp", "asinh", "log", "linear"),
  xlim = NULL,
  ylim = NULL
)
}
\arguments{
\item{ff}{The flowFrame to be plotted}

\item{params}{A vector of length 2 indicating the parameters of ff to be plotted}

\item{colors}{A color palette for rendering densities of events.  Currently, one
of c("flowjo", "viridis", "plasma", "magma").  Can be abbreviated.}

\item{resolution}{One of c("medium", "coarse", "fine").  Can be abbreviated.}

\item{trans_sc}{The transformation that was applied to the scattering parameters of ff.
Currently, one of c("linear", "biexp", "asinh", "log").}

\item{trans_fl}{The transformation that was applied to the fluorescence parameters of ff.
Currently, one of c("linear", "biexp", "asinh", "log").}

\item{xlim}{The limits of the plot in the x direction. NULL will apply sensible defaults.}

\item{ylim}{The limits of the plot in the y direction. NULL will apply sensible defaults.}
}
\value{
A ggplot object.
}
\description{
Draw a picture, with default colors reminiscent of FlowJo.

ggflow uses ggplot semantics to render bivariate flow cytometry plots.
If called "bare", it draws a picture.  If its return value is captured in a variable,
further manipulation of the plot is possible.  See the examples below.
}
\examples{

# get some example data
filename = system.file("extdata", "example1.fcs", package = "wadeTools")
ff = get_sample(filename)
# Recall that get_sample by default applies linear transformation to scattering
# parameters and biexponential transformation to fluorescence parameters.

# Plot ff on default FSC-A, SSC-A dimensions (notice linear axes)
ggflow(ff)

# another plot of fluorescence parameters.  Note the biexponential axes.
ggflow(ff, c("CD4PETR", "CD8Q705"))

# Add a title
ggflow(ff, c("CD4PETR", "CD8Q705")) + labs(title = "Title of Plot")

# or if you prefer,
p = ggflow(ff, c("CD4PETR", "CD8Q705"))
p + labs(title = "Another plot with a title")

# Finally, some of the other color schemes
library("gridExtra")
p1 = ggflow(ff, c("SSC-A", "LIVEDEAD")) + labs(title = "flowjo") + theme(legend.position = 'right')
p2 = ggflow(ff, c("SSC-A", "LIVEDEAD"), colors = "v") + labs(title = "viridis") + theme(legend.position = 'right')
p3 = ggflow(ff, c("SSC-A", "LIVEDEAD"), colors = "m") + labs(title = "magma") + theme(legend.position = 'right')
p4 = ggflow(ff, c("SSC-A", "LIVEDEAD"), colors = "p") + labs(title = "plasma") + theme(legend.position = 'right')
p = grid.arrange(p1, p2, p3, p4, nrow = 2, ncol = 2)
p

}
